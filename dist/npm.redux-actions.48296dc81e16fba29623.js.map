{"version":3,"sources":["webpack:///./node_modules/redux-actions/es/utils/isPlainObject.js","webpack:///./node_modules/redux-actions/es/utils/isMap.js","webpack:///./node_modules/redux-actions/es/utils/ownKeys.js","webpack:///./node_modules/redux-actions/es/utils/get.js","webpack:///./node_modules/redux-actions/es/utils/flattenWhenNode.js","webpack:///./node_modules/redux-actions/es/utils/flattenReducerMap.js","webpack:///./node_modules/redux-actions/es/utils/hasGeneratorInterface.js","webpack:///./node_modules/redux-actions/es/constants.js","webpack:///./node_modules/redux-actions/es/utils/isFunction.js","webpack:///./node_modules/redux-actions/es/utils/identity.js","webpack:///./node_modules/redux-actions/es/utils/toString.js","webpack:///./node_modules/redux-actions/es/handleActions.js","webpack:///./node_modules/redux-actions/es/handleAction.js","webpack:///./node_modules/redux-actions/es/utils/isUndefined.js","webpack:///./node_modules/redux-actions/es/utils/isNil.js"],"names":["value","proto","Object","getPrototypeOf","Map","ownKeys","object","isMap","Array","from","keys","Reflect","getOwnPropertyNames","getOwnPropertySymbols","concat","get","key","x","node","isPlainObject","hasOnlyInterfaceNames","every","ownKey","length","flatten","map","_temp","partialFlatMap","partialFlatActionType","_ref","_ref$namespace","namespace","prefix","forEach","type","nextNamespace","RegExp","test","connectPrefix","_ref2","types","toString","split","partials","apply","p","t","join","connectNamespace","mapValue","predicate","handleActions","handlers","defaultState","options","flattenedReducerMap","flattenReducerMap","reducers","reducer","identity","undefined","isFunction","next","throw","aReducer","isNil","nextReducer","throwReducer","state","action","actionType","indexOf","error","handleAction"],"mappings":";;;;;;;wOAAgB,cACd,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,OAAO,EAGxD,IAFA,IAAIC,EAAQD,EAE4B,OAAjCE,OAAOC,eAAeF,IAC3BA,EAAQC,OAAOC,eAAeF,GAGhC,OAAOC,OAAOC,eAAeH,KAAWC,GCR1B,cACd,MAAsB,oBAARG,KAAuBJ,aAAiBI,KCAzC,SAASC,EAAQC,GAC9B,GAAIC,EAAMD,GAQR,OAAOE,MAAMC,KAAKH,EAAOI,QAG3B,GAAuB,oBAAZC,SAAsD,mBAApBA,QAAQN,QACnD,OAAOM,QAAQN,QAAQC,GAGzB,IAAII,EAAOR,OAAOU,oBAAoBN,GAMtC,MAJ4C,mBAAjCJ,OAAOW,wBAChBH,EAAOA,EAAKI,OAAOZ,OAAOW,sBAAsBP,KAG3CI,ECtBM,SAASK,EAAIC,EAAKC,GAC/B,OAAOV,EAAMU,GAAKA,EAAEF,IAAIC,GAAOC,EAAED,GCCnB,MCCD,GDDC,ECCe,SAAUE,GACvC,OAAQC,EAAcD,IAASX,EAAMW,MCHjCR,EAAOL,EDG2Da,GCFlEE,EAAwBV,EAAKW,OAAM,SAAUC,GAC/C,MAAkB,SAAXA,GAAgC,UAAXA,OAEvBZ,EAAKa,QAAUb,EAAKa,QAAU,GAAKH,IAL7B,IACTV,EACAU,GFCG,SAASI,EAAQC,EAAKC,EAAOC,EAAgBC,GAClD,IAAIC,OAAiB,IAAVH,EAAmB,GAAKA,EAC/BI,EAAiBD,EAAKE,UACtBA,OAA+B,IAAnBD,EGPW,IHOqCA,EAC5DE,EAASH,EAAKG,OA4ClB,YA1CuB,IAAnBL,IACFA,EAAiB,SAGW,IAA1BC,IACFA,EAAwB,IAwB1BvB,EAAQoB,GAAKQ,SAAQ,SAAUC,GAC7B,IAAIC,EATN,SAAuBD,GACrB,OAAIN,IAA0BI,GAAUA,GAAU,IAAII,OAAO,IAAMJ,EAASD,GAAWM,KAAKH,GACnFA,EAGF,GAAKF,EAASD,EAAYG,EAIbI,CAtBtB,SAA0BJ,GACxB,IAAIK,EAEJ,IAAKX,EAAuB,OAAOM,EACnC,IAAIM,EAAQN,EAAKO,WAAWC,MGrBC,MHsBzBC,EAAWf,EAAsBc,MGtBR,MHuB7B,OAAQH,EAAQ,IAAIzB,OAAO8B,MAAML,EAAOI,EAASlB,KAAI,SAAUoB,GAC7D,OAAOL,EAAMf,KAAI,SAAUqB,GACzB,MAAO,GAAKD,EAAId,EAAYe,SAE5BC,KG3ByB,MHuCKC,CAAiBd,IAC/Ce,EAAWlC,EAAImB,EAAMT,GAErByB,EAAUD,GACZzB,EAAQyB,EAAU,CAChBlB,UAAWA,EACXC,OAAQA,GACPL,EAAgBQ,GAEnBR,EAAeQ,GAAiBc,KAG7BtB,IIpDK,cACd,MAAwB,mBAAV3B,GCDA,cACd,OAAOA,GCDO,cACd,OAAOA,EAAMyC,YCOA,SAASU,EAAcC,EAAUC,EAAcC,QAC5C,IAAZA,IACFA,EAAU,IAGZ,IAAUnC,EAAciC,IAAa7C,EAAM6C,GAAW,2CACtD,IAAIG,EAAsBC,EAAkBJ,EAAUE,GAClDG,EAAWpD,EAAQkD,GAAqB9B,KAAI,SAAUS,GACxD,OCRW,SAAsBA,EAAMwB,EAASL,QAClC,IAAZK,IACFA,EAAUC,GAGZ,IAAInB,EAAQ,EAASN,GAAMQ,MLZM,MKajC,WCbiBkB,IDaMP,GAAe,qCAAuCb,EAAMO,KAAK,MAAQ,sBAChG,IAAUc,EAAWH,IAAYvC,EAAcuC,GAAU,4EAEzD,IAAI7B,EAAOgC,EAAWH,GAAW,CAACA,EAASA,GAAW,CAACA,EAAQI,KAAMJ,EAAQK,OAAOtC,KAAI,SAAUuC,GAChG,OElBY,YACd,OAAOhE,QFiBEiE,CAAMD,GAAYL,EAAWK,KAElCE,EAAcrC,EAAK,GACnBsC,EAAetC,EAAK,GAExB,OAAO,SAAUuC,EAAOC,QACR,IAAVD,IACFA,EAAQf,GAGV,IAAIiB,EAAaD,EAAOnC,KAExB,OAAKoC,IAAuD,IAAzC9B,EAAM+B,QAAQ,EAASD,MAIjB,IAAjBD,EAAOG,MAAiBL,EAAeD,GAAaE,EAAOC,GAH1DD,GDfFK,CAAavC,EAAMnB,EAAImB,EAAMqB,GAAsBF,MAExDK,EAAU,IAAed,WAAM,EAAQa,EAAS3C,OAAO,CAACuC,KAC5D,OAAO,SAAUe,EAAOC,GAKtB,YAJc,IAAVD,IACFA,EAAQf,GAGHK,EAAQU,EAAOC,IAxB1B","file":"npm.redux-actions.48296dc81e16fba29623.js","sourcesContent":["export default (function (value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n});","export default (function (value) {\n  return typeof Map !== 'undefined' && value instanceof Map;\n});","import isMap from './isMap';\nexport default function ownKeys(object) {\n  if (isMap(object)) {\n    // We are using loose transforms in babel. Here we are trying to convert an\n    // interable to an array. Loose mode expects everything to already be an\n    // array. The problem is that our eslint rules encourage us to prefer\n    // spread over Array.from.\n    //\n    // Instead of disabling loose mode we simply disable the warning.\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(object.keys());\n  }\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}","import isMap from './isMap';\nexport default function get(key, x) {\n  return isMap(x) ? x.get(key) : x[key];\n}","import { DEFAULT_NAMESPACE, ACTION_TYPE_DELIMITER } from '../constants';\nimport ownKeys from './ownKeys';\nimport get from './get';\nexport default (function (predicate) {\n  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$namespace = _ref.namespace,\n        namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n        prefix = _ref.prefix;\n\n    if (partialFlatMap === void 0) {\n      partialFlatMap = {};\n    }\n\n    if (partialFlatActionType === void 0) {\n      partialFlatActionType = '';\n    }\n\n    function connectNamespace(type) {\n      var _ref2;\n\n      if (!partialFlatActionType) return type;\n      var types = type.toString().split(ACTION_TYPE_DELIMITER);\n      var partials = partialFlatActionType.split(ACTION_TYPE_DELIMITER);\n      return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {\n        return types.map(function (t) {\n          return \"\" + p + namespace + t;\n        });\n      })).join(ACTION_TYPE_DELIMITER);\n    }\n\n    function connectPrefix(type) {\n      if (partialFlatActionType || !prefix || prefix && new RegExp(\"^\" + prefix + namespace).test(type)) {\n        return type;\n      }\n\n      return \"\" + prefix + namespace + type;\n    }\n\n    ownKeys(map).forEach(function (type) {\n      var nextNamespace = connectPrefix(connectNamespace(type));\n      var mapValue = get(type, map);\n\n      if (predicate(mapValue)) {\n        flatten(mapValue, {\n          namespace: namespace,\n          prefix: prefix\n        }, partialFlatMap, nextNamespace);\n      } else {\n        partialFlatMap[nextNamespace] = mapValue;\n      }\n    });\n    return partialFlatMap;\n  };\n});","import isPlainObject from './isPlainObject';\nimport isMap from './isMap';\nimport hasGeneratorInterface from './hasGeneratorInterface';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(function (node) {\n  return (isPlainObject(node) || isMap(node)) && !hasGeneratorInterface(node);\n});","import ownKeys from './ownKeys';\nexport default function hasGeneratorInterface(handler) {\n  var keys = ownKeys(handler);\n  var hasOnlyInterfaceNames = keys.every(function (ownKey) {\n    return ownKey === 'next' || ownKey === 'throw';\n  });\n  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;\n}","export var DEFAULT_NAMESPACE = '/';\nexport var ACTION_TYPE_DELIMITER = '||';","export default (function (value) {\n  return typeof value === 'function';\n});","export default (function (value) {\n  return value;\n});","export default (function (value) {\n  return value.toString();\n});","import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isPlainObject from './utils/isPlainObject';\nimport identity from './utils/identity';\nimport isNil from './utils/isNil';\nimport isUndefined from './utils/isUndefined';\nimport toString from './utils/toString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\nexport default function handleAction(type, reducer, defaultState) {\n  if (reducer === void 0) {\n    reducer = identity;\n  }\n\n  var types = toString(type).split(ACTION_TYPE_DELIMITER);\n  invariant(!isUndefined(defaultState), \"defaultState for reducer handling \" + types.join(', ') + \" should be defined\");\n  invariant(isFunction(reducer) || isPlainObject(reducer), 'Expected reducer to be a function or object with next and throw reducers');\n\n  var _ref = isFunction(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {\n    return isNil(aReducer) ? identity : aReducer;\n  }),\n      nextReducer = _ref[0],\n      throwReducer = _ref[1];\n\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    var actionType = action.type;\n\n    if (!actionType || types.indexOf(toString(actionType)) === -1) {\n      return state;\n    }\n\n    return (action.error === true ? throwReducer : nextReducer)(state, action);\n  };\n}","export default (function (value) {\n  return value === undefined;\n});","export default (function (value) {\n  return value === null || value === undefined;\n});"],"sourceRoot":""}